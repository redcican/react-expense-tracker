{"version":3,"sources":["components/Details/styles.js","context/contextReducer.js","context/context.js","constants/categories.js","useTransactions.js","components/Details/Details.jsx","components/Main/styles.js","utils/formatDate.js","components/Main/Form/styles.js","components/Snackbar/styles.js","components/Snackbar/Snackbar.jsx","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/InfoCard.jsx","components/Main/Main.jsx","styles.js","App.js","index.js"],"names":["makeStyles","income","borderBottom","expense","contextReducer","state","action","transactions","type","filter","item","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","transaction","amount","value","deleteTransaction","addTransaction","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","t","total","currVal","categories","console","log","category","find","filteredCategories","datasets","data","map","backgroundColor","labels","Details","classes","useStyles","chartData","Card","className","CardHeader","CardContent","Typography","variant","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","radioGroup","display","justifyContent","marginBottom","button","marginTop","root","width","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","autoHideDuration","onClose","severity","elevation","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","e","charAt","slice","toLowerCase","iC","selectedCategories","Grid","container","xs","align","words","word","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","key","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","arial-label","Delete","isIncome","Math","round","random","InfoCard","style","textAlign","padding","Main","subheader","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.587c416a.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core';\r\n\r\nexport default makeStyles( () => ({\r\n    income:{\r\n        borderBottom: '10px solid rgba(0,255,0,0.5)',\r\n    },\r\n    expense: {\r\n        borderBottom: '10px solid rgba(255,0,0,0.5)',\r\n    },\r\n}));","// Reducer => a function that takes in the old state and an action => new state\r\n\r\nconst contextReducer = (state, action) => {\r\n    let transactions;\r\n    if (action.type === 'DELETE_TRANSACTION'){\r\n        transactions = state.filter((item) => item.id !== action.payload)\r\n        localStorage.setItem('transactions', JSON.stringify(transactions));\r\n        return transactions;\r\n    }\r\n    else if(action.type === 'ADD_TRANSACTION'){\r\n        transactions = [action.payload,...state];\r\n        localStorage.setItem('transactions', JSON.stringify(transactions));\r\n        return transactions;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default contextReducer;  ","import React, {useReducer, createContext} from 'react';\r\nimport contextReducer from './contextReducer';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\r\n\r\nexport const  ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({children}) =>{\r\n    const [transactions, dispatch] = useReducer(contextReducer, initialState);\r\n\r\n    // Action Creators\r\n    const deleteTransaction = (id) => {\r\n        dispatch({type: 'DELETE_TRANSACTION', payload: id});\r\n    }\r\n\r\n    const addTransaction = (transaction) => {\r\n        dispatch({type: 'ADD_TRANSACTION', payload: transaction});\r\n    }\r\n\r\n    const balance = transactions.reduce((acc, transaction) => {\r\n        return (transaction.type === 'Expense' ? acc - transaction.amount : acc + transaction.amount);\r\n    }, 0)\r\n\r\n    return (\r\n        <ExpenseTrackerContext.Provider value={{\r\n            deleteTransaction,\r\n            addTransaction,\r\n            transactions,\r\n            balance\r\n        }}>\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    )\r\n}","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n    { type: 'Business', amount: 0, color: incomeColors[0] },\r\n    { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n    { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n    { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n    { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n    { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n    { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n    { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n    { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n    { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n    { type: 'Car', amount: 0, color: expenseColors[1] },\r\n    { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n    { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n    { type: 'Food', amount: 0, color: expenseColors[4] },\r\n    { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n    { type: 'House', amount: 0, color: expenseColors[6] },\r\n    { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n    { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n    { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n    { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n    incomeCategories.forEach((c) => c.amount = 0);\r\n    expenseCategories.forEach((c) => c.amount = 0);\r\n};","import {useContext} from 'react';\r\nimport { ExpenseTrackerContext } from \"./context/context\";\r\nimport {\r\n    incomeCategories,\r\n    expenseCategories,\r\n    resetCategories\r\n} from \"./constants/categories\";\r\n\r\nconst useTransactions = (title) => {\r\n    resetCategories();\r\n    const {transactions} = useContext(ExpenseTrackerContext);\r\n    const transactionsPerType = transactions.filter((t) => t.type === title);\r\n    const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0);\r\n    const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    console.log({transactionsPerType, total, categories});\r\n\r\n    transactionsPerType.forEach((t) => {\r\n        const category = categories.find((c) => c.type=== t.category);\r\n        if(category){\r\n            category.amount += t.amount;\r\n        }\r\n    });\r\n\r\n    const filteredCategories = categories.filter((c) => c.amount > 0);\r\n\r\n    const chartData = {\r\n        datasets: [{\r\n            data:filteredCategories.map((c) => c.amount),\r\n            backgroundColor:filteredCategories.map((c) => c.color)\r\n        }],\r\n        labels: filteredCategories.map((c) => c.type)\r\n    }\r\n\r\n    return [ total, chartData];\r\n}\r\n\r\nexport default useTransactions;","import React from 'react'\r\nimport {Card, CardHeader, CardContent, Typography} from '@material-ui/core';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport useStyles from './styles';\r\nimport useTransactions from '../../useTransactions';\r\n\r\nconst Details = ({title}) => {\r\n\r\n    const classes = useStyles();\r\n    const [total, chartData] = useTransactions(title);\r\n\r\n    return (\r\n        <Card className={title === 'Income'? classes.income : classes.expense}>\r\n            <CardHeader title={title}/>\r\n            <CardContent>\r\n                <Typography variant=\"h5\">${total}</Typography>\r\n                <Doughnut data={chartData}/>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    cartContent: {\r\n        paddingTop: 0,\r\n    },\r\n    divider: {\r\n        margin: '20px 0',\r\n    },\r\n}));","const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1}`;\r\n    let day = `${d.getDate()}`;\r\n    const year  = d.getFullYear();\r\n\r\n    if(month.length < 2){\r\n        month = `0${month}`;\r\n    }\r\n    if(day.length < 2){\r\n        day = `0${day}`;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nexport default formatDate;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(() =>({\r\n    radioGroup:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginBottom: '-10px',\r\n    },\r\n    button:{\r\n        marginTop: '20px',\r\n    },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        width : '100%',\r\n        '& > * + *':{\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from \"./styles\";\r\n\r\n\r\nconst CustomizedSnackbar = ({open, setOpen}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event, reason) => {\r\n        if(reason === 'clickaway') return;\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar\r\n                anchorOrigin={{ 'vertical': 'top', 'horizontal': 'right'}}\r\n                open ={open}\r\n                autoHideDuration = {3000}\r\n                onClose = {handleClose}\r\n            >\r\n                <MuiAlert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\">\r\n                    Transaction successfully created.\r\n                </MuiAlert>\r\n\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomizedSnackbar\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport  formatDate from \"../../../utils/formatDate\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\n\r\nimport {useSpeechContext} from '@speechly/react-client'\r\nimport CustomizedSnackbar from '../../Snackbar/Snackbar';\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const {segment} = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')){\r\n      return;\r\n    }\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n    if(transaction.amount && transaction.category){\r\n      setOpen(true);\r\n      addTransaction(transaction);\r\n    }\r\n    \r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(segment){\r\n      if(segment.intent.intent=== 'add_expense'){\r\n        setFormData({...formData,type: 'expense'});\r\n      }\r\n      else if(segment.intent.intent=== 'add_incomes'){\r\n        setFormData({...formData,type: 'Income'})\r\n      }\r\n      else if(segment.isFinal && segment.intent.intent=== 'create_transaction'){\r\n        return createTransaction();\r\n      }\r\n      else if(segment.isFinal && segment.intent.intent === 'cancel_transaction'){\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((e) =>{\r\n        const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\r\n          switch(e.type){\r\n            case 'amount':\r\n              setFormData({...formData, amount: e.value});\r\n              break;\r\n            case 'category':\r\n              if(incomeCategories.map((iC) => iC.type).includes(category)){\r\n                setFormData({ ...formData, type:'Income',category: category });\r\n              }\r\n              else if (expenseCategories.map((iC) => iC.type).includes(category)){\r\n                setFormData({ ...formData, type: 'Expense', category: category });\r\n              }\r\n              break;\r\n            case 'date':\r\n              setFormData({ ...formData, date: e.value });\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n      } );\r\n      if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date){\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackbar open={open} setOpen={setOpen}/>\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\">\r\n          {\r\n            segment && segment.words.map((word) => word.value).join(\" \")\r\n          }\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((category) => {\r\n              return (\r\n                <MenuItem key={category.type} value={category.type}>\r\n                  {category.type}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })}\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n    avatarIncome: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },\r\n    avatarExpense: {\r\n        color: theme.palette.getContrastText(red[500]),\r\n        backgroundColor: red[500],\r\n    },\r\n    list: {\r\n        maxHeight: '150px',\r\n        overflow: 'auto',\r\n    },\r\n}));","import React, {useContext} from \"react\";\r\nimport {\r\n  List as MUIList,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Delete, MoneyOff } from \"@material-ui/icons\";\r\nimport useStyles from \"./styles\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\n\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const {deleteTransaction, transactions} = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <MUIList dense={false} className={classes.list}>\r\n      {transactions.map((transaction) => (\r\n        <Slide\r\n          direction=\"down\"\r\n          in\r\n          mountOnEnter\r\n          unmountOnExit\r\n          key={transaction.id}\r\n        >\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                className={\r\n                  transaction.type === \"Income\"\r\n                    ? classes.avatarIncome\r\n                    : classes.avatarExpense\r\n                }\r\n              >\r\n                <MoneyOff />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={transaction.category}\r\n              secondary={`$${transaction.amount} - ${transaction.date}`}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" arial-label=\"delete\" onClick={()=>deleteTransaction(transaction.id)}>\r\n                <Delete />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </Slide>\r\n      ))}\r\n    </MUIList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react'\r\n\r\nconst isIncome = Math.round(Math.random())\r\n\r\nconst InfoCard = () => {\r\n    return (\r\n        <div style={{textAlign: 'center', padding:'0 10%'}}>\r\n            Try saying: <br />         \r\n            Add {isIncome ? 'Income ' : 'Expense '}\r\n            for {isIncome ? '$100 ' : '$50 '}\r\n            in Category {isIncome ? 'Business ' : 'House '}\r\n            for {isIncome ? 'Monday ' : 'Tuesday '}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","import React, {useContext}from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport Form from \"./Form/Form\";\r\nimport List from \"./List/List\";\r\nimport {ExpenseTrackerContext} from \"../../context/context\";\r\nimport InfoCard from \"../InfoCard\";\r\n\r\nconst Main = () => {\r\n  const classes = useStyles();\r\n  const {balance} = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Total Balance ${balance} \r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          style={{ lineHeight: \"1.5em\", marginTop: \"20px\" }}>\r\n            <InfoCard/>\r\n        </Typography>\r\n        <Divider className={classes.divider}/>\r\n        <Form/>\r\n        <CardContent className={classes.cartContent}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <List/>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    desktop: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    mobile: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    main: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingBottom: '5%',\r\n        },\r\n    },\r\n    last: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: theme.spacing(3),\r\n            paddingBottom: '200px',\r\n        },\r\n    },\r\n    grid: {\r\n        '& > *': {\r\n            margin: theme.spacing(2),\r\n        },\r\n    },\r\n}));","import React, {useRef, useEffect} from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport {PushToTalkButton, PushToTalkButtonContainer, ErrorPanel} from '@speechly/react-ui';\r\nimport Details from './components/Details/Details';\r\nimport Main from './components/Main/Main';\r\nimport useStyles from './styles';\r\nimport {SpeechState, useSpeechContext} from '@speechly/react-client';\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const { speechState} = useSpeechContext();\r\n    const main = useRef(null);\r\n\r\n    const executeScroll = () => main.current.scrollIntoView();\r\n\r\n    useEffect(() =>{\r\n        if(speechState === SpeechState.Recording){\r\n            executeScroll();\r\n        }\r\n    },[speechState])\r\n\r\n    return (\r\n        <div>\r\n            <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{height:'100vh'}}>\r\n                <Grid item xs={12} sm={4} className={classes.mobile}>\r\n                    <Details title=\"Income\"/>\r\n                </Grid>\r\n                <Grid ref={main} item xs={12} sm={3} className={classes.main}>\r\n                    <Main/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} className={classes.desktop}>\r\n                    <Details title=\"Income\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} className={classes.last}>\r\n                    <Details title=\"Expense\"/>\r\n                </Grid>\r\n                <PushToTalkButtonContainer>\r\n                    <PushToTalkButton/>\r\n                    <ErrorPanel />\r\n                </PushToTalkButtonContainer>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {SpeechProvider} from \"@speechly/react-client\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"./context/context\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <SpeechProvider appId=\"1ae648ff-5927-45fc-8458-7c7e2c1fe6b7\" language=\"en-US\">\r\n  <Provider>\r\n    <App />\r\n  </Provider>\r\n  </SpeechProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}